// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Assesment_KartikRohilla.Infrastructure.Entities;

public partial class Neosoft_KartikRohillaContext : DbContext
{
    public Neosoft_KartikRohillaContext(DbContextOptions<Neosoft_KartikRohillaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }

    public virtual DbSet<LoginUser> LoginUsers { get; set; }

    public virtual DbSet<Orders2> Orders2s { get; set; }

    public virtual DbSet<State> States { get; set; }

    public virtual DbSet<User2> User2s { get; set; }

    public virtual DbSet<User3> User3s { get; set; }

    public virtual DbSet<User4> User4s { get; set; }

    public virtual DbSet<User5> User5s { get; set; }

    public virtual DbSet<User6> User6s { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.CityId).HasName("PK__City__F2D21B76681C003B");

            entity.HasOne(d => d.State).WithMany(p => p.Cities).HasConstraintName("FK__City__StateId__4CA06362");
        });

        modelBuilder.Entity<Country>(entity =>
        {
            entity.HasKey(e => e.CountryId).HasName("PK__Country__10D1609F6A8A1804");
        });

        modelBuilder.Entity<EmployeeMaster>(entity =>
        {
            entity.HasKey(e => e.RowId).HasName("PK__Employee__7C36D07E9C882467");

            entity.Property(e => e.CityId).HasDefaultValueSql("(NULL)");
            entity.Property(e => e.CountryId).HasDefaultValueSql("(NULL)");
            entity.Property(e => e.EmployeeCode).HasComputedColumnSql("('00'+CONVERT([varchar](6),[Row_Id]))", true);
            entity.Property(e => e.StateId).HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.City).WithMany(p => p.EmployeeMasters).HasConstraintName("FK_City");

            entity.HasOne(d => d.Country).WithMany(p => p.EmployeeMasters).HasConstraintName("FK_Country");

            entity.HasOne(d => d.State).WithMany(p => p.EmployeeMasters).HasConstraintName("FK_State");
        });

        modelBuilder.Entity<LoginUser>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__LoginUse__1788CC4C1CB48C37");
        });

        modelBuilder.Entity<Orders2>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<State>(entity =>
        {
            entity.HasKey(e => e.StateId).HasName("PK__State__C3BA3B3A8956FFD9");

            entity.HasOne(d => d.Country).WithMany(p => p.States).HasConstraintName("FK__State__CountryId__49C3F6B7");
        });

        modelBuilder.Entity<User2>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<User3>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<User4>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<User5>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<User6>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });
        modelBuilder.HasSequence("EmployeeCodeSeq");

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}